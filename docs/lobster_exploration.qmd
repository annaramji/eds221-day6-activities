---
title: "lobster_exploration"
format: html
editor: visual
---

## Day 6 Activities

## Lobster Data Exploration

```{r}
library(tidyverse)
library(here)
library(janitor)
```

```{r}
lobsters <- read_csv(here("data","Lobster_Abundance_All_Years_20210412.csv"), na = c("-99999", "")) |> 
  clean_names() |>  
  uncount(count)
```

count() brings us from case format to frequency format

`count()` lets you quickly count the unique values of one or more variables: `df %>% count(a, b)` is roughly equivalent to `df %>% group_by(a, b) %>% summarise(n = n())`. `count()` is paired with `tally()`, a lower-level helper that is equivalent to `df %>% summarise(n = n())`. Supply `wt` to perform weighted counts, switching the summary from `n = n()` to `n = sum(wt)`.

`add_count()` and `add_tally()` are equivalents to `count()` and `tally()` but use `mutate()` instead of `summarise()` so that they add a new column with group-wise counts.

uncount() brings us from case format to frequency format (what we want in this dataset)

Performs the opposite operation toÂ [`dplyr::count()`](http://127.0.0.1:33571/help/library/dplyr/help/count), duplicating rows according to a weighting variable (or expression).

-   note from class: weighted mean or uncount

-   ex:

penguins_counts \<- penguins \|\>

uncount(n)

(makes it so that each count has its own row) -- helpful for calculating mean data

### **Find counts and mean sizes by site & year**

-   Create a summary table that finds the total counts (see: `n()`), and mean carapace lengths of lobsters observed in the dataset by **site** and **year**.

-   Create a ggplot graph of the number of total lobsters observed (y-axis) by year (x-axis) in the study, grouped (either aesthetically or by faceting) by site

```{r}
lobster_counts <- lobsters |> 
  group_by(site, year) |> 
  summarize(count = n(),
            mean_carapace_length = mean(size_mm))
  

ggplot(lobster_counts, aes(x = year, y = count, color = site)) +
  geom_point()
```

### **Find the proportion of legal lobsters at each site for 2020**

The legal lobster size (carapace length) in California is 79.76 mm.

-   Create a subset that only contains lobster data from 2020 (note: this should be from the original data you read in, not the summary table you created above)

-   Write code (you can decide how to do this - there are a number of ways) to find the counts of lobsters observed at each site (only using site as the grouping factor) that are above and below the legal limit. **Hint:** You may want to add a new column `legal` that contains \"yes\" or \"no\" based on the size of the observed lobster (see `dplyr::case_when()` for a really nice way to do this), then use `group_by() %>% summarize(n())` or `dplyr::count()` to get counts by group within variables

```{r}
lobs_2020 <- lobsters |> 
  filter(year == 2012)

legal_lobsters <- lobs_2020 |> 
  group_by(site) |> 
  mutate(legal = case_when(
    size_mm > 79.76 ~ "yes",
    size_mm <= 79.76 ~ "no"
  )) 

legal_counts <- legal_lobsters |> 
  group_by(site, legal) |> 
  summarize(count = n())
```

-   Create a stacked column graph that shows the *proportion* of legal and non-legal lobsters at each site. \*\*Hint: create a stacked column graph with `geom_col()`, then add the argument `position = "fill"` to convert from a graph of absolute counts to proportions.

```{r}
ggplot(data = legal_counts, aes(x = site, y = count)) +
  geom_col(aes(color = legal, fill = legal), position = "fill")
```

Which two sites had the largest proportion of legal lobsters in 2020? Explore the metadata to come up with a hypothesis about why that might be.

The sites with the largest proportion of legal lobsters in 2020 (blue area) are CARP and MOHK.

## **Task 3: Random lobster wrangling**

Starting with the original lobsters data that you read in as `lobsters`, complete the following (separately - these are not expected to be done in sequence or anything). You can store each of the outputs as `ex_a`, `ex_b`, etc. for the purposes of this task.

### **filter() practice**

1.  Create and store a subset that only contains lobsters from sites \"IVEE\", \"CARP\" and \"NAPL\". Check your output data frame to ensure that only those three sites exist.

2.  Create a subset that only contains lobsters observed in August.

3.  Create a subset with lobsters at Arroyo Quemado (AQUE) **OR** with a carapace length greater than 70 mm.

4.  Create a subset that does NOT include observations from Naples Reef (NAPL)

```{r}
ex_a <- lobsters |> 
  filter(site %in% c("IVEE", "CARP", "NAPL"))

ex_b <- lobsters |> 
  filter(month == 8)

ex_c <- lobsters |> 
  filter(site == "AQUE" | size_mm > 70)

ex_d <- lobsters |> 
  filter(site != "NAPL")
# filter(!site %in% "NAPL")

```

### **group_by() %\>% summarize() practice**

5.  Find the mean and standard deviation of lobster carapace length, grouped by site.

6.  Find the maximum carapace length by site and month.

```{r}
lobs_mean_sd <- lobsters |> 
  group_by(site) |> 
  summarize(mean_carapace = mean(size_mm, na.rm = TRUE), 
            sd_carapace = sd(size_mm, na.rm = TRUE))

max_min_lobs <- lobsters |> 
  group_by(site, month) |> 
  summarize(max = max(size_mm, na.rm = TRUE),
            min = min(size_mm, na.rm = TRUE))
```

### **mutate() practice**

7.  Add a new column that contains lobster carapace length converted to centimeters. Check output.

8.  Update the site column to all lowercase. Check output.

9.  Convert the area column to a character (not sure why you\'d want to do this, but try it anyway). Check output.

```{r}
lobsters_cm <- lobsters |> 
  mutate(size_cm = (size_mm / 10))

sites_lower <- lobsters |> 
  mutate(site = tolower(site))

character_area <- lobsters |> 
  mutate(area = as.character(area))
```

### **case_when() practice**

10. Use `case_when()` to add a new column called `size_bin` that contains \"small\" if carapace size is \<= 70 mm, or \"large\" if it is greater than 70 mm. Check output.

11. Use `case_when()` to add a new column called `designation` that contains \"MPA\" if the site is \"IVEE\" or \"NAPL\", and \"not MPA\" for all other outcomes.

```{r}
size_bin_lobs <- lobsters |> 
  mutate(size_bin = case_when(
    size_mm <= 70 ~ "small",
    size_mm > 70 ~ "large"
  ))

designated_lobs <- lobsters |> 
  mutate(designation = case_when(
    site == "IVEE" | site == "NAPL" ~ "MPA",
    .default = "not MPA"
  ))
```
